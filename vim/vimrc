set nocompatible " vi incompatible mode
set encoding=UTF-8
set cursorline
set nu " line numbering is on
set wrap " line wrap
set lbr  " by word (not by charcter as by default)
set tabstop=4 " tab width measured in spaces
set shiftwidth=4
set autoindent
set expandtab
set scrolloff=5
set colorcolumn=80
" displaying tab characters and trailing spaces
" with special characters \u2592\u2591 and \u2593
" They also may be '>-' and '@':
" :set listchars=tab:>-,trail:@
set lcs=tab:▒░,trail:▓,nbsp:░
set list

" Change showbreak when line numbers are on or off.
" Show no char when line numbers are on, and \u21aa otherwise.
au OptionSet number :if v:option_new | set showbreak= |
                   \ else | set showbreak=↪ |
                   \ endif

set foldmethod=indent
set foldlevel=99

" shortcut for paste mode
" http://superuser.com/questions/134709/
" how-can-i-keep-the-code-formated-as-original-source-when-i-paste-them-to-vim
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>
set showmode

map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

set fo=tcq1
set hlsearch " highlighting results while searching

set grepprg=ag

set path+=~/repogitories

"some stuff to get the mouse going in term
set mouse=a
set ttymouse=xterm2

" VIM-PLUG plugin manager
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source ~/.vim/vimrc
endif
call plug#begin('~/.vim/plugged')

    """""""" AUTOCOMPLETE """"""""

    " LSP clients (Language Server Protocol);
    " autocompletion, snippets, syntax checking
    Plug 'honza/vim-snippets'  " set of snippets
    Plug 'SirVer/ultisnips' | runtime vimrc.d/ultisnips
    Plug 'davidhalter/jedi-vim', {'for': 'python'} | runtime vimrc.d/jedivim
    Plug 'w0rp/ale' | runtime vimrc.d/ale
    Plug 'neoclide/coc.nvim', {'branch': 'release'} | runtime vimrc.d/coc
    Plug 'quick-lint/quick-lint-js', {'rtp': 'plugin/vim/quick-lint-js.vim',
                                    \ 'tag': '1.0.0'}

    """""""" SYNTAX HIGHLIGHTING """"""""

    Plug 'othree/html5.vim', {'for': ['html', 'svg']}
    Plug 'othree/yajs.vim', {'for': 'javascript'}
    Plug 'HerringtonDarkholme/yats.vim', {'for': 'typescript'}
    Plug 'vim-scripts/vim-stylus', {'for': 'stylus'}
    Plug 'Glench/Vim-Jinja2-Syntax'
    Plug 'rust-lang/rust.vim'
    Plug 'saltstack/salt-vim'
    Plug 'hail2u/vim-css3-syntax'
    Plug 'lervag/vimtex' | let g:tex_flavor = 'latex'

    " Подсветка литералов цвета соответствующим цветом
    "Plug 'lilydjwg/colorizer',
    "     \ {'for': ['css', 'stylus', 'scss', 'sass', 'less']}

    " 256-color schemes
    "Plug 'godlygeek/csapprox'
    Plug 'vim-scripts/3DGlasses.vim'
    Plug 'vim-scripts/autumnleaf_modified.vim'
    Plug 'fugalh/desert.vim'
    Plug 'vim-scripts/ironman.vim'
    Plug 'nanotech/jellybeans.vim'
    Plug 'arcticicestudio/nord-vim'
    Plug 'trevordmiller/nova-vim'
    Plug 'vim-scripts/nuvola.vim'
    Plug 'mhartington/oceanic-next'
    Plug 'vim-scripts/oceanlight'
    Plug 'junegunn/seoul256.vim'
    Plug 'vim-scripts/summerfruit256.vim'
    Plug 'altercation/vim-colors-solarized'
    Plug 'rakr/vim-one'
    Plug 'nightsense/vimspectr'
    Plug 'chriskempson/vim-tomorrow-theme'
    Plug 'vim-scripts/wombat256.vim'

    """""""" OTHERS """"""""

    Plug 'tmux-plugins/vim-tmux-focus-events'
    Plug 'editorconfig/editorconfig-vim'
    Plug 'tpope/vim-surround'
    Plug 'junegunn/vim-easy-align' | runtime vimrc.d/easyAlign
    Plug 'easymotion/vim-easymotion'
    Plug 'jeetsukumaran/vim-indentwise'
    Plug 'terryma/vim-multiple-cursors' | runtime vimrc.d/multipleCursors
    "Plug 'tomtom/quickfixsigns_vim'
    Plug 'junegunn/limelight.vim', {'on': 'Goyo'}
    Plug 'junegunn/goyo.vim', {'on': 'Goyo'} | runtime vimrc.d/goyo
    Plug 'dpowdere/stdheader.vim', {'on': ['Stdhdr', 'StdhdrReplace'],
                                  \ 'for': ['c']}

    " Filetree
    Plug 'scrooloose/nerdtree' | Plug 'jistr/vim-nerdtree-tabs'
    runtime vimrc.d/nerdtree

    " Class outline viewer
    " https://majutsushi.github.io/tagbar/
    Plug 'majutsushi/tagbar' | runtime vimrc.d/tagbar

call plug#end()
filetype plugin indent on
" VIM-PLUG END


" Russian to English key mapping
set langmap=ФИСВУАПРШОЛДЬТЩЗЙКЫЕГМЦЧНЯ;ABCDEFGHIJKLMNOPQRSTUVWXYZ,
           \фисвуапршолдьтщзйкыегмцчня;abcdefghijklmnopqrstuvwxyz

"" 24-bit true color support
"set termguicolors
"let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
"let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
"" NB: `set termguicolors` добавляет мешающие линии-рамки в Goyo
"" но без него ухудшается отображение цветовых схем.
"" https://github.com/junegunn/goyo.vim/issues/200

" colors
if !exists("g:syntax_on")
    syntax enable
endif
source ~/.vim/vimrc.d/colors/.default

" Run server to react to changes in color themes
" (relies on +clientserver feature).
call remote_startserver('nurono')

" directory where the swap files are stored
set dir=~/.vim/temp/,$HOME/Local\ Settings/Temp
" directory where the backup files are stored
set backupdir=~/.vim/temp/,$HOME/Local\ Settings/Temp

" check if a file has been changed
au CursorHold,BufEnter,WinEnter,BufWinEnter,TabEnter * checktime

nmap gb :buffers<CR>

" Add hyphen to the list of characters identified as word characters
" for *.css, *.html, *.xml
au FileType css\|html\|xml setlocal iskeyword+=-

augroup override2142
    au!
    au BufRead,BufNewFile *.h set filetype=c
    au Filetype c set comments=sl:/*,mb:**,elx:*/
    au Filetype c set noexpandtab
    au Filetype c set tabstop=4
augroup END
