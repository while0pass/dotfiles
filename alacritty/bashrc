BGPIDS=~/.tmux/bgpids

function _get_keyboard_layout() {
    gsettings get org.gnome.desktop.input-sources mru-sources | cut -d\' -f4
}

function _mytmux() {
    # Отслеживает переключение раскладки клавиатуры и оповещает об этом tmux
    (gsettings monitor org.gnome.desktop.input-sources mru-sources \
        | xargs -L1 bash -c 'tmux refresh-client -S') & disown ; echo $! >>$BGPIDS
    tmux "$@"
    xargs -a $BGPIDS -r -L1 -I{} kill -TERM -- '-{}'
    rm -f $BGPIDS
}

TTY_DIR=~/repogitories/dotfiles/alacritty
VIM_DIR=~/repogitories/dotfiles/vim
VIM_DIR_THEMES=$VIM_DIR/vimrc.d/colors
VIM_DEFAULT_THEME=$VIM_DIR_THEMES/.default
FONT_SIZE_RAW_STEP=5

function _set_default_fontsize() {
    echo '11.0' >$TTY_DIR/.fontsize
}

function _set_default_dark() {
    echo 'gruvbox-dark-my' >$TTY_DIR/.default-dark
}

function _set_default_light() {
    echo 'pencil-light' >$TTY_DIR/.default-light
}

function _set_default_background() {
    echo 'dark' >$TTY_DIR/.background
}

function _getvars() {
    BACKGROUND=$(cat $TTY_DIR/.background)
    TTY_THEME=$(cat $TTY_DIR/.default-$BACKGROUND)
    VIM_THEME=$(cat $VIM_DIR/.default-$BACKGROUND)
    FONT_SIZE=$(cat $TTY_DIR/.fontsize)
}

function _notify_apps() {
    # Notify vim
    vim --serverlist | grep -i nurono | xargs -I SRVNAME \
        vim --servername SRVNAME --remote-send ":source $VIM_DEFAULT_THEME<CR>"

    # Update tmux conf
    tmux source-file ~/.tmux/dotfiles/$BACKGROUND
}

function _echo_tty() {
    _getvars
    echo "Тема tty:  $TTY_THEME"
}

function _echo_info() {
    _getvars
    echo "Фон:       $BACKGROUND"
    echo "Кегль:     $FONT_SIZE"
    echo "Тема tty:  $TTY_THEME"
    echo "Тема vim:  $VIM_THEME"
}

function _increase_fontsize() {
    _getvars
    FONT_SIZE_RAW=${FONT_SIZE/\./}
    FONT_SIZE_RAW=$(( $FONT_SIZE_RAW + $FONT_SIZE_RAW_STEP ))
    echo $FONT_SIZE_RAW | sed -e 's/\(.\)$/.\1/' >$TTY_DIR/.fontsize
}

function _decrease_fontsize() {
    _getvars
    FONT_SIZE_RAW=${FONT_SIZE/\./}
    FONT_SIZE_RAW=$(( $FONT_SIZE_RAW - $FONT_SIZE_RAW_STEP ))
    echo $FONT_SIZE_RAW | sed -e 's/\(.\)$/.\1/' >$TTY_DIR/.fontsize
}

function _next_theme() {
    _getvars
    t=($(ls -1 $TTY_DIR/.themes/$BACKGROUND/ | xargs -n 1 basename -s .yml))
    while test "${t[0]}" != "$TTY_THEME"
    do
        t=("${t[@]:1}" "${t[0]}")
    done
    echo ${t[1]} >$TTY_DIR/.default-$BACKGROUND
}

function _prev_theme() {
    _getvars
    t=($(ls -1 $TTY_DIR/.themes/$BACKGROUND/ | xargs -n 1 basename -s .yml))
    while test "${t[1]}" != "$TTY_THEME"
    do
        t=("${t[@]:1}" "${t[0]}")
    done
    echo ${t[0]} >$TTY_DIR/.default-$BACKGROUND
}

function _next_vim_theme() {
    _getvars
    t=($(ls -1 $VIM_DIR_THEMES/$BACKGROUND/))
    while test "${t[0]}" != "$VIM_THEME"
    do
        t=("${t[@]:1}" "${t[0]}")
    done
    echo ${t[1]} >$VIM_DIR/.default-$BACKGROUND
}

function _prev_vim_theme() {
    _getvars
    t=($(ls -1 $VIM_DIR_THEMES/$BACKGROUND/))
    while test "${t[1]}" != "$VIM_THEME"
    do
        t=("${t[@]:1}" "${t[0]}")
    done
    echo ${t[0]} >$VIM_DIR/.default-$BACKGROUND
}

function _set_default_theme() {
    _getvars
    _echo_info
    cat <(echo '_fontSize: &fontSize' $FONT_SIZE) \
        $TTY_DIR/.themes/$BACKGROUND/$TTY_THEME.yml \
        >~/.config/alacritty/alacritty.yml
    ln -sfT $VIM_DIR_THEMES/$BACKGROUND/$VIM_THEME $VIM_DEFAULT_THEME
}

function ytty() {
    _getvars
    case "$1" in

        'dark' | 'd' | 'da' | 'dar' )

            if [[ $BACKGROUND == 'dark' ]]
            then
                _echo_info
            else
                echo 'dark' > $TTY_DIR/.background
                _set_default_theme
                _notify_apps
            fi
            ;;

        'light' | 'l' | 'li' | 'lig' | 'ligh' )

            if [[ $BACKGROUND == 'light' ]]
            then
                _echo_info
            else
                echo 'light' > $TTY_DIR/.background
                _set_default_theme
                _notify_apps
            fi
            ;;

        'next' | 'nex' | 'ne' | 'n' )
            _next_theme
            _set_default_theme
            ;;

        'prev' | 'previ' | 'previo' | 'previos' | 'previous' | pre | pr | p )
            _prev_theme
            _set_default_theme
            ;;

        'vim' | 'vi' )

            case $2 in

                'next' | 'nex' | 'ne' | 'n' )

                    _next_vim_theme
                    _set_default_theme
                    _notify_apps
                    ;;

                'prev' | previ | previo | previos | previous | pre | pr | p )

                    _prev_vim_theme
                    _set_default_theme
                    _notify_apps
                    ;;

                * )
                    _echo_info
                    ;;
            esac
            ;;

        * )
            _echo_info
            ;;
    esac
}
